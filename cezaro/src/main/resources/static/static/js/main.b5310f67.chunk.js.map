{"version":3,"sources":["components/Post.js","components/Browse.js","components/SearchComponent.js","components/ComposeComponent.js","components/TopNavigation.js","components/ShowSinglePost.js","components/ModifyComponent.js","components/App.js","serviceWorker.js","index.js"],"names":["require","Post","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","content","react_default","a","createElement","className","date","author","title","Component","Browse","_this","state","isLoading","posts","fetch","response","json","body","setState","_this2","map","post","key","onClick","components_Post","SearchComponent","searchValue","handleChange","bind","assertThisInitialized","handleSubmit","event","preventDefault","target","value","onSubmit","type","name","onChange","ComposeComponent","text","handleTextChange","handleTitleChange","handleNameChange","method","JSON","stringify","TopNavigation","show","console","log","components_SearchComponent","components_ComposeComponent","ShowSinglePost","setMainPage","deletePost","modifyPostClick","ModifyComponent","App","page","showSinglePostClick","x","components_ModifyComponent","_this3","components_ShowSinglePost","_this4","components_Browse","_this5","_this6","_this$state","components_TopNavigation","topMenuClick","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5310f67.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nrequire('../styles/Post.css');\r\n\r\nclass Post extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.content == null){\r\n\r\n            return (\r\n            <div className=\"post\">\r\n                <p>Date: {this.props.date}</p>\r\n                <p>Author: {this.props.author}</p>\r\n                <p>Title: {this.props.title}</p>\r\n                <br></br>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"post\">\r\n                <p>Date: {this.props.date}</p>\r\n                <p>Author: {this.props.author}</p>\r\n                <p>Title: {this.props.title}</p>\r\n                <p>Content: {this.props.content}</p>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\n\r\nrequire('../styles/Browse.css');\r\n\r\nclass Browse extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('api/posts');\r\n        const body = await response.json();\r\n        this.setState({ posts: body, isLoading: false });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Browsediv\">\r\n                <h2>Post List</h2>\r\n                {this.state.posts.map(post =>\r\n                    <div key={post.date} onClick={ () => this.props.onClick( post.date ) }>\r\n                        <Post date = {post.date} author = {post.author} title = {post.title} />\r\n\r\n                        <br></br>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Browse","import React, { Component } from 'react';\r\nimport Browse from \"./Browse\";\r\nimport Post from './Post';\r\n\r\nrequire('../styles/SearchComponent.css');\r\n\r\nclass SearchComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchValue: \"Search\",\r\n            isLoading: false,\r\n            posts: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const response = await fetch('api/search/' +this.state.searchValue );\r\n        const body = await response.json();\r\n        this.setState({ posts: body });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({searchValue: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchComponentDiv\">\r\n                <h1> Search Component </h1>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <label>Search</label>\r\n                    <input type=\"text\" value={this.state.searchValue} name=\"name\" onChange={this.handleChange} />\r\n\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n\r\n                {this.state.posts.map(post =>\r\n                    <div key={post.date} onClick={ () => this.props.onClick( post.date ) }>\r\n                        <Post date = {post.date} author = {post.author} title = {post.title}/>\r\n                        <br></br>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchComponent;","import React, { Component } from 'react';\r\n\r\nrequire('../styles/ComposeComponent.css');\r\n\r\nclass ComposeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: 'Please write an essay about your favorite DOM element.',\r\n            name: \"\",\r\n            title: \"\"\r\n        };\r\n\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        //fetch('api/add', { method: 'post', body: \"\"+ this.state.name, title: \"\" +this.state.title + this.state.text});\r\n        fetch('api/add', { method: 'post', body: JSON.stringify({ author: this.state.name, title: this.state.title, content: this.state.text }) });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    handleTitleChange(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ComposeComponentDiv\">\r\n                <h1> Compose Component </h1>\r\n                <h1> Compose Component </h1>\r\n                <h1> Compose Component </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <label>Name</label>\r\n                    <input type=\"text\" name=\"name\" onChange={this.handleNameChange} />\r\n\r\n                    <label>Title</label>\r\n                    <input type=\"text\" name=\"title\" onChange={this.handleTitleChange} />\r\n\r\n                    <label>\r\n                        Essay:\r\n                        <textarea value={this.state.text} onChange={this.handleTextChange} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ComposeComponent;","import React, { Component } from 'react';\r\nimport SearchComponent from './SearchComponent';\r\nimport ComposeComponent from \"./ComposeComponent\";\r\n\r\nrequire('../styles/TopNavigation.css');\r\n\r\nclass TopNavigation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: \"SearchComponent\"};\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  setCompose() {\r\n\r\n  }\r\n\r\n  setBarState(a) {\r\n    this.setState({ show: a })\r\n    console.log(\"this \");\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.show)\r\n    let a = <SearchComponent/>;\r\n    if (this.state.show === \"SearchComponent\") {\r\n      console.log(\"eka\");\r\n      a = <SearchComponent/>;\r\n    } else {\r\n      console.log(\"toka\");\r\n      a = <ComposeComponent/>;\r\n    }\r\n\r\n    return (\r\n    <div className=\"TopNavDiv\">\r\n      <ul className=\"TopNavUL\">\r\n        <li> <button type=\"submit\" onClick={ () => this.props.onClick( \"Browse\" ) }>Browse</button> </li>\r\n        <li> <button type=\"submit\" onClick={ () => this.props.onClick( \"Search\" ) }>Search</button> </li>\r\n        <li> <button type=\"submit\" onClick={ () => this.props.onClick( \"Publish\" ) }>Publish</button> </li>\r\n        <li>Delete</li>\r\n        <li>Modify</li>\r\n      </ul>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopNavigation;","import React, { Component } from 'react';\r\nimport Post from './Post';\r\n\r\nrequire('../styles/ShowSinglePost.css');\r\n\r\nclass ShowSinglePost extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {post: \"\"}\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const response = await fetch('api/post/' +this.props.date );\r\n        const body = await response.json();\r\n        this.setState({ post: body });\r\n    }\r\n\r\n    async deletePost(){\r\n        await fetch('api/delete/' +this.state.post.date);\r\n        this.props.setMainPage();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ShowSingePostdiv\">\r\n                <Post date = {this.state.post.date} title = {this.state.post.title} author = {this.state.post.author} content = {this.state.post.content}/>\r\n                <button onClick={() => this.deletePost() }>Delete</button>\r\n                <button onClick={() => this.props.modifyPostClick(this.state.post.date)}>Modify</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ShowSinglePost","import React, { Component } from 'react';\r\n\r\nrequire('../styles/ModifyComponent.css');\r\n\r\nclass ModifyComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            name: \"\",\r\n            title: \"\"}\r\n\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const response = await fetch('api/post/' +this.props.date );\r\n        const body = await response.json();\r\n        this.setState({ text: body.content, name: body.author, title: body.title });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        //fetch('api/add', { method: 'post', body: \"\"+ this.state.name, title: \"\" +this.state.title + this.state.text});\r\n        fetch('api/update/' + this.props.date, { method: 'post', body: JSON.stringify({ author: this.state.name, title: this.state.title, content: this.state.text }) });\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    handleTitleChange(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"ModifyComponentDiv\"}>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <label>Author</label>\r\n                    <input value={this.state.name} type=\"text\" name=\"name\" onChange={this.handleNameChange} />\r\n\r\n                    <label>Title</label>\r\n                    <input value={this.state.title} type=\"text\" name=\"title\" onChange={this.handleTitleChange} />\r\n\r\n                    <label>\r\n                        <textarea value={this.state.text} onChange={this.handleTextChange} />\r\n                    </label>\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModifyComponent\r\n\r\n","import React, { Component } from 'react';\r\nimport TopNavigation from './TopNavigation';\r\nimport ComposeComponent from \"./ComposeComponent\";\r\nimport SearchComponent from \"./SearchComponent\";\r\nimport ShowSinglePost from \"./ShowSinglePost\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\nimport Browse from \"./Browse\";\r\n\r\nrequire('../styles/App.css');\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isLoading: false,\r\n    posts: [],\r\n      page: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    //const response = await fetch('api/posts');\r\n    //const body = await response.json();\r\n    this.setState({ page: <SearchComponent onClick={ (a) => this.showSinglePostClick(a)} /> });\r\n  }\r\n\r\n  modifyPostClick(x) {\r\n    //alert(\"modifyy post from app.js date : \" +x);\r\n    this.setState( {page: <ModifyComponent date ={x}/>})\r\n  }\r\n\r\n  showSinglePostClick(x) {\r\n    //alert(\"show single post function from App.js \" +x);\r\n    this.setState( {page: <ShowSinglePost date={x} setMainPage={() => this.setMainPage()} modifyPostClick={(a) => this.modifyPostClick(a)}/>})\r\n  }\r\n\r\n  setMainPage() {\r\n    this.setState( {page: <Browse onClick={ (a) => this.showSinglePostClick(a)}/> });\r\n  }\r\n\r\n  topMenuClick(x) {\r\n    if (x === \"Search\") {\r\n        this.setState({page: <SearchComponent onClick={ (a) => this.showSinglePostClick(a)} /> });\r\n    }\r\n    if (x === \"Publish\") {\r\n        this.setState({page: <ComposeComponent/> });\r\n    }\r\n    if (x === \"Browse\") {\r\n      this.setState({page: <Browse onClick={ (a) => this.showSinglePostClick(a)}/> });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {posts, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <TopNavigation onClick={ (a) => this.topMenuClick(a)} />\r\n            {this.state.page}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}