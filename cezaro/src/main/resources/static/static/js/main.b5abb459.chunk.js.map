{"version":3,"sources":["components/Post.js","components/SearchComponent.js","components/ComposeComponent.js","components/TopNavigation.js","components/Comment.js","components/Browse.js","components/Comments.js","components/ShowSinglePost.js","components/ModifyComponent.js","components/FrontPage.js","components/Login.js","components/App.js","serviceWorker.js","index.js"],"names":["require","Post","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","content","react_default","a","createElement","className","date","author","title","Component","SearchComponent","_this","state","searchValue","isLoading","posts","handleChange","bind","assertThisInitialized","handleSubmit","event","preventDefault","fetch","response","json","body","setState","target","value","_this2","onSubmit","type","name","onChange","required","map","post","key","id","onClick","components_Post","formatTime","ComposeComponent","text","published","handleTextChange","handleTitleChange","handleNameChange","method","headers","Content-Type","JSON","stringify","rows","cols","TopNavigation","show","components_SearchComponent","components_ComposeComponent","userType","Comment","datetime","pseudonym","Browse","Comments","postID","commentFieldText","comments","liked","x","postId","update","commentId","likesArray","includes","push","comment","components_Comment","likes","likeButton","deletePost","ShowSinglePost","commentsComponent","React","createRef","formattedTime","then","setMainPage","current","updateWithId","undefined","Date","toUTCString","prevPost","modifyPostClick","nextPost","components_Comments","ref","e","ModifyComponent","FrontPage","Login","usernameFieldText","passwordFieldText","loggedIn","handleUsernameChange","handlePasswordChange","userName","password","status","alert","setUser","App","page","Cookies","get","components_FrontPage","components_ModifyComponent","_this3","components_ShowSinglePost","set","expires","_this4","showSinglePostClick","components_Browse","components_Login","remove","_this5","_this$state","components_TopNavigation","topMenuClick","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5abb459.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nrequire('../styles/Post.css');\r\n\r\nclass Post extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.content == null){\r\n\r\n            return (\r\n            <div className=\"post\">\r\n                <p>Date: {this.props.date}</p>\r\n                <p className=\"authorP\">Author: {this.props.author}</p>\r\n                <p className=\"titleP\">Title: {this.props.title}</p>\r\n            </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"post\">\r\n                <p>Date: {this.props.date}</p>\r\n                <p className=\"authorP\">Author: {this.props.author}</p>\r\n                <p className=\"titleP\">Title: {this.props.title}</p>\r\n                <p className=\"contentP\">{this.props.content}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\n\r\nrequire('../styles/SearchComponent.css');\r\n\r\nclass SearchComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchValue: \"\",\r\n            isLoading: false,\r\n            posts: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const response = await fetch('api/search/' +this.state.searchValue );\r\n        const body = await response.json();\r\n        this.setState({ posts: body });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({searchValue: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchComponentDiv\">\r\n                <h1> Search </h1>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <input\r\n                        type=\"text\" value={this.state.searchValue}\r\n                        name=\"name\" onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <input type=\"submit\" value=\"search\" />\r\n                </form>\r\n                <br></br>\r\n\r\n                {this.state.posts.map(post =>\r\n                    <div key={post.id} onClick={ () => this.props.onClick( post.id ) }>\r\n                        <Post id = {post.id} date = {this.props.formatTime(post.date)} author = {post.author} title = {post.title}/>\r\n                        <br></br>\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchComponent;","import React, { Component } from 'react';\r\n\r\nrequire('../styles/ComposeComponent.css');\r\n\r\nclass ComposeComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: 'Please write an essay about your favorite DOM element.',\r\n            name: \"\",\r\n            title: \"\",\r\n            published: false\r\n        };\r\n\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({published: false});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        fetch('api/add', {\r\n            method: 'POST',\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ author: this.state.name, title: this.state.title, content: this.state.text })\r\n        });\r\n        this.setState({published: true});\r\n        event.preventDefault();\r\n        //this.props.setMainPage();\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    handleTitleChange(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        if(!this.state.published) {\r\n            return (\r\n                <div className=\"ComposeComponentDiv\">\r\n                    <h1> Write your post </h1>\r\n                    <form onSubmit={this.handleSubmit}>\r\n\r\n                        <br/>\r\n\r\n                        <label name=\"composeLabel\">Title</label>\r\n\r\n                        <br/>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"composeInput\"\r\n                            value={this.state.title}\r\n                            onChange={this.handleTitleChange}\r\n                            required\r\n                        />\r\n\r\n                        <br/>\r\n\r\n                        <textarea\r\n                            name=\"composeTextArea\"\r\n                            rows=\"30\" cols=\"45\"\r\n                            value={this.state.text}\r\n                            onChange={this.handleTextChange}\r\n                            required\r\n                        />\r\n                        <br/>\r\n\r\n                        <label name=\"composeLabel\">Your name </label>\r\n\r\n                        <br/>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"composeInput\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleNameChange}\r\n                            required\r\n                        />\r\n\r\n                        <br/>\r\n\r\n                        <input\r\n                            name=\"composeSubmitButton\"\r\n                            type=\"submit\"\r\n                            value=\"Publish\"/>\r\n                    </form>\r\n\r\n\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"ComposeComponentDiv\">\r\n                    <h1> Your post has been published</h1>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default ComposeComponent;","import React, { Component } from 'react';\r\nimport SearchComponent from './SearchComponent';\r\nimport ComposeComponent from \"./ComposeComponent\";\r\n\r\nrequire('../styles/TopNavigation.css');\r\n\r\nclass TopNavigation extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {show: \"SearchComponent\"};\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  setCompose() {\r\n\r\n  }\r\n\r\n  setBarState(a) {\r\n    this.setState({ show: a })\r\n  }\r\n\r\n  render() {\r\n    let a = <SearchComponent/>;\r\n    if (this.state.show === \"SearchComponent\") {\r\n      a = <SearchComponent/>;\r\n    } else {\r\n      a = <ComposeComponent/>;\r\n    }\r\n\r\n    return (\r\n    <div className=\"TopNavDiv\">\r\n      <h1>Cezaro Blog</h1>\r\n      <ul className=\"TopNavUL\">\r\n        <li> <button className=\"topButt\" type=\"submit\" onClick={ () => this.props.onClick( \"Browse\" ) }>Browse</button> </li>\r\n        <li> <button className=\"topButt\" type=\"submit\" onClick={ () => this.props.onClick( \"Search\" ) }>Search</button> </li>\r\n        { this.props.userType\r\n            ? <li> <button className=\"topButt\" type=\"submit\" onClick={ () => this.props.onClick( \"Publish\" ) }>Publish</button> </li>\r\n            : ''\r\n        }\r\n        { this.props.userType\r\n            ? <li> <button className=\"topButt\" type=\"submit\" onClick={ () => this.props.onClick( \"Logout\" ) }>Logout</button></li>\r\n            : <li> <button className=\"topButt\" type=\"submit\" onClick={ () => this.props.onClick( \"Login\" ) }>Login</button></li>\r\n        }\r\n\r\n      </ul>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopNavigation;","import React, { Component } from 'react';\r\n\r\nclass Comment extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"comment\">\r\n                <p className=\"date\">{this.props.datetime}</p>\r\n                <p className=\"comAuth\" >Käyttäjä {this.props.pseudonym} kommentoi:</p>\r\n                <p>\"{this.props.content}\"</p>\r\n                <br/>\r\n            </div>\r\n        );\r\n\r\n        /*\r\n        if (this.props.content == null){\r\n\r\n            return (\r\n                <div className=\"post\">\r\n                    <p>Date: tyhja</p>\r\n                    <p>Author: tyhja</p>\r\n                    <p>Title: tyhja</p>\r\n                    <br></br>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"post\">\r\n                <p>Date: tyhja</p>\r\n                <p>Author: tyhja</p>\r\n                <p>Title: tyhja</p>\r\n                <br></br>\r\n            </div>\r\n        );*/\r\n    }\r\n}\r\n\r\nexport default Comment;\r\n","import React, { Component } from 'react';\r\nimport Post from './Post';\r\n\r\nrequire('../styles/Browse.css');\r\n\r\nclass Browse extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            posts: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('api/posts');\r\n        const body = await response.json();\r\n        this.setState({ posts: body, isLoading: false });\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoading){\r\n            return (\r\n                <div className=\"Browsediv\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n        <div className=\"Browsediv\">\r\n            <h2>Post List</h2>\r\n            {this.state.posts.map(post =>\r\n                <div key={post.id} onClick={ () => this.props.onClick( post.id ) }>\r\n                    <Post\r\n                        id = {post.id}\r\n                        date = {this.props.formatTime(post.date)}\r\n                        author = {post.author}\r\n                        title = {post.title}\r\n                    />\r\n                    <br></br>\r\n                </div>\r\n            )}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Browse","import React, { Component } from 'react';\r\nimport Comment from \"./Comment\";\r\nimport Post from \"./Browse\";\r\n\r\nclass Comments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            postID: this.props.postID,\r\n            commentFieldText: \"\",\r\n            name: \"\",\r\n            comments: [],\r\n            liked: []\r\n        };\r\n\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('comment/getComments/' +this.state.postID);\r\n        const body = await response.json();\r\n        this.setState({ comments: body});\r\n    }\r\n\r\n    async update() {\r\n        const response = await fetch('comment/getComments/' +this.state.postID);\r\n        const body = await response.json();\r\n        this.setState({ comments: body, postID: this.props.postID});\r\n    }\r\n\r\n    async updateWithId(x) {\r\n        const response = await fetch('comment/getComments/' +x);\r\n        const body = await response.json();\r\n        this.setState({ comments: body, postID: x});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n        this.setState({commentFieldText: \"\", name: \"\"});\r\n        //fetch\r\n        await fetch('comment/add', {\r\n            method: 'post',\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ pseudonym: this.state.name, content: this.state.commentFieldText, postId: this.state.postID})\r\n        });\r\n        this.update();\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({commentFieldText: event.target.value});\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState( {name: event.target.value});\r\n    }\r\n\r\n    async deletePost(postID) {\r\n        await fetch('comment/delete/' +postID, {\r\n            method: 'post',\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        this.update();\r\n    }\r\n\r\n    async likeButton(commentId) {\r\n        let likesArray = this.state.liked;\r\n\r\n        if (!likesArray.includes(commentId)) {\r\n            await fetch('comment/like/' +commentId, {\r\n                method: 'post'\r\n            });\r\n            likesArray.push(commentId);\r\n            this.setState({liked: likesArray});\r\n        }\r\n\r\n        this.update();\r\n    }\r\n\r\n\r\n    /*{this.state.comments.map(comment =>\r\n        <div key={comment.id}>\r\n            <Comment id = {comment.id} date = {comment.datetime} pseudonym = {comment.pseudonym} content = {comment.content} />\r\n        </div>\r\n    )}*/\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Comments</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div>\r\n                        <label>Leave your comment below</label>\r\n                        <br/>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"comment\"\r\n                            value={this.state.commentFieldText}\r\n                            onChange={this.handleTextChange}\r\n                            required\r\n                            />\r\n                            <br/>\r\n                        <label>Your name :</label>\r\n                        <br/>\r\n                        <input\r\n                            type =\"text\"\r\n                            name=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleNameChange}\r\n                            required\r\n                        />\r\n                        <br/>\r\n                    </div>\r\n                    <input className=\"submitCommentButton\" type=\"submit\" value=\"Comment\" />\r\n                </form>\r\n                <br/>\r\n\r\n                {this.state.comments.map(comment =>\r\n                    <div className =\"oneComment\" key={comment.id}>\r\n                        <Comment\r\n                            id = {comment.id}\r\n                            datetime = {this.props.formatTime(comment.datetime)}\r\n                            pseudonym = {comment.pseudonym}\r\n                            content = {comment.content} />\r\n                            <div>Total likes : {comment.likes}</div>\r\n                        <button className=\"likeButton\" onClick={() => this.likeButton(comment.id) }>Like this comment</button>\r\n                        {this.props.userType\r\n                            ? <button className=\"deleteCommentButton\" onClick={() => this.deletePost(comment.id)}>Delete Comment</button>\r\n                                : \"\"\r\n                        }\r\n                        <br/>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport Post from './Post';\r\nimport Comments from './Comments';\r\n\r\nrequire('../styles/ShowSinglePost.css');\r\n\r\nclass ShowSinglePost extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.commentsComponent = React.createRef();\r\n        this.state = {\r\n            post: \"\",\r\n            comments: [],\r\n            id: this.props.id\r\n        }\r\n        this.formattedTime = this.formattedTime.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('api/post/' +this.props.id );\r\n        const body = await response.json().then();\r\n        this.setState({ post: body, id: this.props.id });\r\n    }\r\n\r\n    async deletePost(){\r\n        await fetch('api/delete/' +this.state.post.id);\r\n        this.props.setMainPage();\r\n    }\r\n\r\n    async nextPost() {\r\n        const response = await fetch('api/nextpost/' +this.state.post.id);\r\n        const body = await response.json();\r\n        this.setState({ post: body, id: this.state.post.id });\r\n        this.commentsComponent.current.updateWithId(this.state.post.id);\r\n    }\r\n\r\n    async prevPost() {\r\n        const response = await fetch('api/prevpost/' +this.state.post.id);\r\n        const body = await response.json();\r\n        this.setState({ post: body, id: this.state.post.id });\r\n        this.commentsComponent.current.updateWithId(this.state.post.id);\r\n    }\r\n\r\n\r\n    formattedTime(){\r\n        if(this.state.post.date !== undefined) {\r\n            let formatted = new Date(this.state.post.date).toUTCString();\r\n            return formatted;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ShowSingePostdiv\">\r\n                <Post\r\n                    id = {this.state.post.id}\r\n                    date = {this.props.formatTime(this.state.post.date)}\r\n                    title = {this.state.post.title}\r\n                    author = {this.state.post.author}\r\n                    content = {this.state.post.content}/>\r\n                <button className=\"ControlButtons\" onClick={() => this.prevPost() }>Previous Post</button>\r\n                {this.props.userType\r\n                    ? <button className=\"ControlButtons\" onClick={() => this.deletePost() }>Delete</button>\r\n                    : \"\"\r\n                }\r\n                {this.props.userType\r\n                    ? <button className=\"ControlButtons\" onClick={() => this.props.modifyPostClick(this.state.post.id)}>Modify</button>\r\n                    : \"\"\r\n                }\r\n                <button className=\"ControlButtons\" onClick={() => this.nextPost() }>Next Post</button>\r\n\r\n                <Comments ref={this.commentsComponent} postID={this.state.id} userType={this.props.userType} formatTime={(e) => this.props.formatTime(e)}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ShowSinglePost","import React, { Component } from 'react';\r\n\r\nrequire('../styles/ModifyComponent.css');\r\n\r\nclass ModifyComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: \"\",\r\n            name: \"\",\r\n            title: \"\"}\r\n\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const response = await fetch('api/post/' +this.props.id );\r\n        const body = await response.json();\r\n        this.setState({ text: body.content, name: body.author, title: body.title });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        //fetch('api/add', { method: 'post', body: \"\"+ this.state.name, title: \"\" +this.state.title + this.state.text});\r\n        fetch('api/update/' + this.props.id, {\r\n            method: 'post',\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ author: this.state.name, title: this.state.title, content: this.state.text })\r\n        });\r\n\r\n        this.props.setMainPage();\r\n    }\r\n\r\n    handleTextChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    handleTitleChange(event) {\r\n        this.setState({title: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ModifyComponentDiv\">\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    <h1>Modify Post</h1>\r\n\r\n                    <br/>\r\n\r\n                    <label name=\"modifyLabel\">Title</label>\r\n\r\n                    <br/>\r\n\r\n                    <input\r\n                        value={this.state.title}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        onChange={this.handleTitleChange}\r\n                        required\r\n                    />\r\n\r\n                    <br/>\r\n\r\n                        <textarea\r\n                            name=\"ModifyTextArea\"\r\n                            className=\"ModifyTextArea\"\r\n                            rows=\"30\" cols=\"45\"\r\n                            value={this.state.text}\r\n                            onChange={this.handleTextChange}\r\n                            required\r\n                        />\r\n\r\n                        <br/>\r\n\r\n                    <label name=\"modifyLabel\">Author</label>\r\n\r\n                    <br/>\r\n\r\n                    <input\r\n                        value={this.state.name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        onChange={this.handleNameChange}\r\n                        required\r\n                    />\r\n\r\n                    <br/>\r\n\r\n                    <input name=\"modifySubmitButton\" type=\"submit\" value=\"Modify\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModifyComponent\r\n\r\n","import React, { Component } from 'react';\r\n\r\nrequire(\"../styles/FrontPage.css\");\r\n\r\nclass FrontPage extends Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"frondpagediv\">\r\n                <h1>Cezaro Blog Front page</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FrontPage;","import React, { Component } from 'react';\r\n\r\nrequire(\"../styles/Login.css\");\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            usernameFieldText: \"\",\r\n            passwordFieldText: \"\",\r\n            loggedIn: false\r\n        };\r\n\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleUsernameChange(event) {\r\n        this.setState({usernameFieldText: event.target.value});\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        this.setState({passwordFieldText: event.target.value});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({userName: this.state.usernameFieldText, password: this.state.passwordFieldText})\r\n            });\r\n            const body = await response.json();\r\n\r\n            if (body.status === 401) {\r\n                alert(\"wrong password!\");\r\n            } else if (body.status === 404) {\r\n                alert(\"username not found!\");\r\n            }else{\r\n                let user = true;\r\n                this.props.setUser(user);\r\n                //this.props.setMainPage();\r\n                this.setState({loggedIn: true});\r\n            }\r\n        }catch (e) {\r\n\r\n        }\r\n\r\n        //tässä vois tietty kysyä backendistä jotain\r\n        //alert(\"Username : \" +this.state.usernameFieldText + \" Password : \" +this.state.passwordFieldText);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.loggedIn) {\r\n            return (\r\n                <div className=\"logdinDiv\">\r\n\r\n                    <h1>Login</h1>\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <br/>\r\n                            <label>Username</label>\r\n                            <br/>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                value={this.state.usernameFieldText}\r\n                                onChange={this.handleUsernameChange}\r\n                                required\r\n                            />\r\n\r\n                            <br/>\r\n                            <br/>\r\n                            <label>Password</label>\r\n                            <br/>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={this.state.passwordFieldText}\r\n                                onChange={this.handlePasswordChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <input type=\"submit\" value=\"Login\"/>\r\n                    </form>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n            <div className=\"logdinDiv\">\r\n                <h1>Logged in as administrator</h1>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport TopNavigation from './TopNavigation';\r\nimport ComposeComponent from \"./ComposeComponent\";\r\nimport SearchComponent from \"./SearchComponent\";\r\nimport ShowSinglePost from \"./ShowSinglePost\";\r\nimport ModifyComponent from \"./ModifyComponent\";\r\nimport FrontPage from \"./FrontPage\";\r\nimport Browse from \"./Browse\";\r\nimport Login from \"./Login\";\r\n\r\n\r\nimport '../styles/App.css'\r\n\r\nrequire('../styles/App.css');\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    isLoading: false,\r\n    posts: [],\r\n    page: \"\",\r\n    userType: Cookies.get('user')\r\n  };\r\n\r\n  componentDidMount() {\r\n    //const response = await fetch('api/posts');\r\n    //const body = await response.json();\r\n    //this.setState({ page: <SearchComponent onClick={ (a) => this.showSinglePostClick(a)} /> });\r\n      this.setState( {page : <FrontPage/>});\r\n  }\r\n\r\n  modifyPostClick(x) {\r\n    //alert(\"modifyy post from app.js date : \" +x);\r\n    this.setState( {page: <ModifyComponent id ={x} setMainPage={() => this.setMainPage()}/>})\r\n  }\r\n\r\n  showSinglePostClick(x) {\r\n    //alert(\"show single post function from App.js \" +x);\r\n    this.setState( {page: <ShowSinglePost\r\n          id={x}\r\n          formatTime={(e) => this.formatTime(e)}\r\n          setMainPage={() => this.setMainPage()}\r\n          modifyPostClick={(a) => this.modifyPostClick(a)}\r\n          userType={this.state.userType}\r\n      />})\r\n  }\r\n\r\n  setMainPage() {\r\n    //this.setState( {page: <Browse onClick={ (a) => this.showSinglePostClick(a)}/> });\r\n      this.setState( { page : <FrontPage/> });\r\n  }\r\n\r\n  setUser(userType) {   //\"guest\" \"admin\"\r\n    this.setState({userType: userType});\r\n    Cookies.set('user', userType, { expires: 0.02 });\r\n  }\r\n\r\n  formatTime(e){\r\n    if(e !== undefined) {\r\n      let formatted = new Date(e).toUTCString();\r\n      return formatted;\r\n    }\r\n  }\r\n\r\n  topMenuClick(x) {\r\n    if (x === \"Search\") {\r\n        this.setState({page: <SearchComponent onClick={ (a) => this.showSinglePostClick(a)} formatTime={(e) => this.formatTime(e)} /> });\r\n    }\r\n    if (x === \"Publish\") {\r\n        this.setState({page: <ComposeComponent setMainPage={() => this.setMainPage()}/> });\r\n    }\r\n    if (x === \"Browse\") {\r\n      this.setState({page: <Browse onClick={ (a) => this.showSinglePostClick(a)} formatTime={(e) => this.formatTime(e)}/> });\r\n    }\r\n    if (x === \"Login\") {\r\n      this.setState({page: <Login setUser={(a) => this.setUser(a)} setMainPage={() => this.setMainPage()}/> });\r\n    }\r\n    if (x === \"Logout\") {\r\n      this.setState({page: <FrontPage/>, userType: false});\r\n      Cookies.remove('user');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {posts, isLoading} = this.state;\r\n\r\n    if (isLoading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          <TopNavigation onClick={ (a) => this.topMenuClick(a)} userType={this.state.userType} />\r\n            {this.state.page}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}